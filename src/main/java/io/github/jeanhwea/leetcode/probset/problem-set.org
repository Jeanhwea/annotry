#+TITLE: Problem Set
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2021-06-28 Mon 15:58:19>
#+HTML_LINK_UP: ../readme.html
#+HTML_LINK_HOME: ../index.html
#+SETUPFILE: ~/.emacs.d/site-lisp/org-html-themes/setup/theme-readtheorg-local.setup
#+TAGS: leetcode programming


* 数组 Array
  1. [X] [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/][LC026]] [[file:ch01/Solution026.java][删除有序数组中的重复项]]
  2. [X] [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array-ii/][LC080]] [[file:ch01/Solution080.java][删除有序数组中的重复项 II]]
  3. [X] [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array/][LC033]] [[file:ch01/Solution033.java][搜索旋转排序数组]]
  4. [X] [[https://leetcode-cn.com/problems/search-in-rotated-sorted-array-ii/][LC081]] [[file:ch01/Solution081.java][搜索旋转排序数组 II]]
  5. [X] [[https://leetcode-cn.com/problems/rotate-array/][LC189]] [[file:ch01/Solution189.java][旋转数组]]
  6. [X] [[https://leetcode-cn.com/problems/median-of-two-sorted-arrays/][LC004]] [[file:ch01/Solution004.java][寻找两个正序数组的中位数]]
  7. [X] [[https://leetcode-cn.com/problems/longest-consecutive-sequence/][LC128]] [[file:ch01/Solution128.java][最长连续序列]]
  8. [X] [[https://leetcode-cn.com/problems/two-sum/][LC001]] [[file:ch01/Solution001.java][两数之和]]
  9. [X] [[https://leetcode-cn.com/problems/3sum/][LC015]] [[file:ch01/Solution015.java][三数之和]]
  10. [X] [[https://leetcode-cn.com/problems/3sum-closest/][LC016]] [[file:ch01/Solution016.java][最接近的三数之和]]
  11. [X] [[https://leetcode-cn.com/problems/4sum/][LC018]] [[file:ch01/Solution018.java][四数之和]]
  12. [X] [[https://leetcode-cn.com/problems/remove-element/][LC027]] [[file:ch01/Solution027.java][移除元素]]
  13. [X] [[https://leetcode-cn.com/problems/next-permutation/][LC031]] [[file:ch01/Solution031.java][下一个排列]]
  14. [X] [[https://leetcode-cn.com/problems/permutation-sequence/][LC060]] [[file:ch01/Solution060.java][排列顺序]]
  15. [X] [[https://leetcode-cn.com/problems/valid-sudoku/][LC036]] [[file:ch01/Solution036.java][有效的数独]]
  16. [X] [[https://leetcode-cn.com/problems/trapping-rain-water/][LC042]] [[file:ch01/Solution042.java][接雨水]]
  17. [X] [[https://leetcode-cn.com/problems/spiral-matrix/][LC054]] [[file:ch01/Solution054.java][螺旋矩阵]]
  18. [X] [[https://leetcode-cn.com/problems/rotate-image/][LC048]] [[file:ch01/Solution048.java][旋转图像]]
  19. [X] [[https://leetcode-cn.com/problems/plus-one/][LC066]] [[file:ch01/Solution066.java][加一]]
  20. [X] [[https://leetcode-cn.com/problems/climbing-stairs/][LC070]] [[file:ch01/Solution070.java][爬楼梯]]
  21. [X] [[https://leetcode-cn.com/problems/gray-code/][LC089]] [[file:ch01/Solution089.java][格雷编码]]
  22. [X] [[https://leetcode-cn.com/problems/set-matrix-zeroes/][LC073]] [[file:ch01/Solution073.java][矩阵置零]]
  23. [X] [[https://leetcode-cn.com/problems/gas-station/][LC134]] [[file:ch01/Solution134.java][加油站]]
  24. [X] [[https://leetcode-cn.com/problems/candy/][LC135]] [[file:ch01/Solution135.java][分发糖果]]
  25. [X] [[https://leetcode-cn.com/problems/single-number/][LC136]] [[file:ch01/Solution136.java][只出现一次的数字]]
  26. [X] [[https://leetcode-cn.com/problems/single-number-ii/][LC137]] [[file:ch01/Solution137.java][只出现一次的数字 II]]

* 链表 List
  1. [X] [[https://leetcode-cn.com/problems/add-two-numbers/][LC002]] [[file:ch02/Solution002.java][两数相加]]
  2. [X] [[https://leetcode-cn.com/problems/reverse-linked-list-ii/][LC092]] [[file:ch02/Solution092.java][反转链表 II]]
  3. [X] [[https://leetcode-cn.com/problems/partition-list/][LC086]] [[file:ch02/Solution086.java][分隔链表]]
  4. [X] [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list/][LC083]] [[file:ch02/Solution083.java][删除排序链表中的重复元素]]
  5. [X] [[https://leetcode-cn.com/problems/remove-duplicates-from-sorted-list-ii/][LC082]] [[file:ch02/Solution082.java][删除排序链表中的重复元素 II]]
  6. [X] [[https://leetcode-cn.com/problems/rotate-list/][LC061]] [[file:ch02/Solution061.java][旋转链表]]
  7. [X] [[https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/][LC019]] [[file:ch02/Solution019.java][删除链表的倒数第 N 个结点]]
  8. [X] [[https://leetcode-cn.com/problems/swap-nodes-in-pairs/][LC024]] [[file:ch02/Solution024.java][两两交换链表中的节点]]
  9. [X] [[https://leetcode-cn.com/problems/reverse-nodes-in-k-group/][LC025]] [[file:ch02/Solution025.java][K 个一组翻转链表]]
  10. [X] [[https://leetcode-cn.com/problems/copy-list-with-random-pointer/][LC138]] [[file:ch02/Solution138.java][复制带随机指针的链表]]
  11. [X] [[https://leetcode-cn.com/problems/linked-list-cycle/][LC141]] [[file:ch02/Solution141.java][环形链表]]
  12. [X] [[https://leetcode-cn.com/problems/linked-list-cycle-ii/][LC142]] [[file:ch02/Solution142.java][环形链表 II]]
  13. [X] [[https://leetcode-cn.com/problems/reorder-list/][LC143]] [[file:ch02/Solution143.java][重排链表]]
  14. [X] [[https://leetcode-cn.com/problems/lru-cache/][LC146]] [[file:ch02/Solution146.java][LRU 缓存机制]]

* 字符串 String
  1. [X] [[https://leetcode-cn.com/problems/valid-palindrome/][LC125]] [[file:ch03/Solution125.java][验证回文串]]
  2. [X] [[https://leetcode-cn.com/problems/implement-strstr/][LC028]] [[file:ch03/Solution028.java][实现 strStr]]
  3. [X] [[https://leetcode-cn.com/problems/string-to-integer-atoi/][LC008]] [[file:ch03/Solution008.java][字符串转换整数 (atoi)]]
  4. [X] [[https://leetcode-cn.com/problems/valid-number/][LC065]] [[file:ch03/Solution065.java][有效数字]]
  5. [X] [[https://leetcode-cn.com/problems/add-binary/][LC067]] [[file:ch03/Solution067.java][二进制求和]]
  6. [X] [[https://leetcode-cn.com/problems/longest-palindromic-substring/][LC005]] [[file:ch03/Solution005.java][最长回文子串]]
  7. [X] [[https://leetcode-cn.com/problems/longest-common-prefix/][LC014]] [[file:ch03/Solution014.java][最长公共前缀]]
  8. [X] [[https://leetcode-cn.com/problems/regular-expression-matching/][LC010]] [[file:ch03/Solution010.java][正则表达式匹配]]
  9. [X] [[https://leetcode-cn.com/problems/wildcard-matching/][LC044]] [[file:ch03/Solution044.java][通配符匹配]]
  10. [X] [[https://leetcode-cn.com/problems/integer-to-roman/][LC012]] [[file:ch03/Solution012.java][整数转罗马数字]]
  11. [X] [[https://leetcode-cn.com/problems/roman-to-integer/][LC013]] [[file:ch03/Solution013.java][罗马数字转整数]]
  12. [X] [[https://leetcode-cn.com/problems/count-and-say/][LC038]] [[file:ch03/Solution038.java][外观数列]]
  13. [X] [[https://leetcode-cn.com/problems/valid-anagram/][LC242]] [[file:ch03/Solution242.java][有效的字母异位词]]
  14. [X] [[https://leetcode-cn.com/problems/simplify-path/][LC071]] [[file:ch03/Solution071.java][简化路径]]
  15. [X] [[https://leetcode-cn.com/problems/length-of-last-word/][LC058]] [[file:ch03/Solution058.java][最后一个单词的长度]]

* 栈和队列 Stack & Heap
  1. [X] [[https://leetcode-cn.com/problems/valid-parentheses/][LC020]] [[file:ch04/Solution020.java][有效的括号]]
  2. [X] [[https://leetcode-cn.com/problems/longest-valid-parentheses/][LC032]] [[file:ch04/Solution032.java][最长有效括号]]
  3. [ ] [[https://leetcode-cn.com/problems/largest-rectangle-in-histogram/][LC084]] [[file:ch04/Solution084.java][柱状图中最大的矩形]]
  4. [X] [[https://leetcode-cn.com/problems/evaluate-reverse-polish-notation/][LC150]] [[file:ch04/Solution150.java][逆波兰表达式求值]]

* 树 Tree
  1. [X] [[https://leetcode-cn.com/problems/binary-tree-preorder-traversal/][LC144]] [[file:ch05/Solution144.java][二叉树的前序遍历]]
  2. [ ] Binary Tree Inorder Traversal
  3. [ ] Binary Tree Postorder Traversal
  4. [ ] Binary Tree Level Order Traversal
  5. [ ] Binary Tree Level Order Traversal II
  6. [ ] Binary Tree Zigzag Level Order Traversal
  7. [ ] Recover Binary Search Tree
  8. [ ] Same Tree
  9. [ ] Symmetric Tree
  10. [ ] Balanced Binary Tree
  11. [ ] Flatten Binary Tree to Linked List
  12. [ ] Populating Next Right Pointers in Each Node II
  13. [ ] Construct Binary Tree from Preorder and Inorder Traversal
  14. [ ] Construct Binary Tree from Inorder and Postorder Traversal
  15. [ ] Unique Binary Search Trees
  16. [ ] Unique Binary Search Trees II
  17. [ ] Validate Binary Search Tree
  18. [ ] Convert Sorted Array to Binary Search Tree
  19. [ ] Convert Sorted List to Binary Search Tree
  20. [ ] Minimum Depth of Binary Tree
  21. [ ] Maximum Depth of Binary Tree
  22. [ ] Path Sum
  23. [ ] Path Sum II
  24. [ ] Binary Tree Maximum Path Sum
  25. [ ] Populating Next Right Pointers in Each Node
  26. [ ] Sum Root to Leaf Numbers

* 排序和查找 Sorting & Searching
  1. [ ] Merge Sorted Array
  2. [ ] Merge Two Sorted Lists
  3. [ ] Merge k Sorted Lists
  4. [ ] Insertion Sort List
  5. [ ] Sort List
  6. [ ] First Missing Positive
  7. [ ] Sort Colors
  8. [ ] Search for a Range
  9. [ ] Search Insert Position
  10. [ ] Search a 2D Matrix

* 回溯 BackTrack
  1. [ ] Subsets
  2. [ ] Subsets II
  3. [ ] Permutations
  4. [ ] Permutations II
  5. [ ] Combinations
  6. [ ] Letter Combinations of a Phone Number

* 广度优先搜索 BFS
  1. [ ] Word Ladder
  2. [ ] Word Ladder II
  3. [ ] Surrounded Regions

* 深度优先搜索 DFS
  1. [ ] Palindrome Partitioning
  2. [ ] Unique Paths
  3. [ ] Unique Paths II
  4. [ ] N Queens
  5. [ ] N Queens II
  6. [ ] Restore IP Addresses
  7. [ ] Combination Sum
  8. [ ] Combination Sum II
  9. [ ] Generate Parentheses
  10. [ ] Sudoku Solver
  11. [ ] Word Search

* 分治 Divide and Conquer
  1. [ ] Pow(x,n)
  2. [ ] Sqrt(x)

* 贪心法 Greedy Algorithm
  1. [ ] Jump Game
  2. [ ] Jump Game II
  3. [ ] Best Time to Buy and Sell Stock
  4. [ ] Best Time to Buy and Sell Stock II
  5. [ ] Longest Substring Without Repeating Characters
  6. [ ] Container With Most Water

* 动态规划 Dynamic Programming
  1. [ ] Triangle
  2. [ ] Maximum Subarray
  3. [ ] Palindrome Partitioning II
  4. [ ] Maximal Rectangle
  5. [ ] Best Time to Buy and Sell Stock III
  6. [ ] Interleaving String
  7. [ ] Scramble String
  8. [ ] Minimum Path Sum
  9. [ ] Edit Distance
  10. [ ] Decode Ways
  11. [ ] Distinct Subsequences
  12. [ ] Word Break
  13. [ ] Word Break II

* 图 Graph
  1. [ ] Clone Graph
  2. [X] [[https://leetcode-cn.com/problems/max-area-of-island/][LC695]] [[file:ch13/Solution695.java][岛屿的最大面积]]

* 细节题 Misc
  1. [ ] Reverse Integer
  2. [ ] Palindrome Number
  3. [ ] Insert Interval
  4. [ ] Merge Intervals
  5. [ ] Minimum Window Substring
  6. [ ] Multiply Strings
  7. [ ] Substring with Concatenation of All Words
  8. [ ] Pascal's Triangle
  9. [ ] Pascal's Triangle II
  10. [ ] Spiral Matrix
  11. [ ] Spiral Matrix II
  12. [ ] ZigZag Conversion
  13. [ ] Divide Two Integers
  14. [ ] Text Justification
  15. [ ] Max Points on a Line
